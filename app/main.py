import asyncio
import logging
from aiogram import Bot, Dispatcher

from app.db import init_db
from app.config import settings
from app.routers.entries import r as entries_router
from app.scheduler.scheduler import schedule_report_dispatch, schedule_monthly_snapshots
from app.routers.analytics.expenses_router import expenses_router
from app.routers.analytics.incomes_router import incomes_router
from app.services.analytics.expense.expense_reports import build_report
from app.routers.analytics.asset_router import asset_router
from app.utils.alerts import setup_alert_logging


async def main() -> None:
    """–ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ SmartSavings.

    –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç:
      1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (`init_db`).
      2. –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫.
      3. –°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ (`Dispatcher`).
      4. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `entries_router`) –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–±—ã—Ç–∏–π.
      5. –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (`start_polling`).

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–µ–∫—Ç–∞, –∫–æ–≥–¥–∞ —Å–∫—Ä–∏–ø—Ç
    –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é (`python main.py`).
    """
    # –í–∫–ª—é—á–∞–µ–º –∞–ª–µ—Ä—Ç—ã –≤ Telegram –¥–ª—è –æ—à–∏–±–æ–∫
    setup_alert_logging()

    await init_db()
    bot = Bot(token=settings.TELEGRAM_BOT_TOKEN)
    dp = Dispatcher()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    dp.include_router(router=entries_router)
    dp.include_router(router=expenses_router)
    dp.include_router(router=incomes_router)
    dp.include_router(router=asset_router)
    schedule_report_dispatch(
        bot=bot,
        report_fn=build_report,
        cron="0 9 * * MON",  # –ö–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 09:00 –ø–æ UTC
        report_name="üìä Weekly expense report"
    )
    
    # –ü–ª–∞–Ω–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–Ω—ç–ø—à–æ—Ç—ã –∫–∞–ø–∏—Ç–∞–ª–∞
    schedule_monthly_snapshots()

    try:
        await dp.start_polling(bot)
    except Exception:
        logging.exception("Bot polling crashed")
        raise

if __name__ == "__main__":
    asyncio.run(main())
