name: CI/CD

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

  build-and-push:
    runs-on: ubuntu-latest
    needs: [checks]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Meta
        id: meta
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          echo "owner_lc=${OWNER_LC}" >> $GITHUB_OUTPUT
          echo "image=ghcr.io/${OWNER_LC}/smartsavings" >> $GITHUB_OUTPUT
          echo "short_sha=${GITHUB_SHA::12}" >> $GITHUB_OUTPUT

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ steps.meta.outputs.owner_lc }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.short_sha }}
            ${{ steps.meta.outputs.image }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - name: Meta
        id: meta
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          echo "owner_lc=${OWNER_LC}" >> $GITHUB_OUTPUT
          echo "short_sha=${GITHUB_SHA::12}" >> $GITHUB_OUTPUT

      - name: SSH deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -euo pipefail
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ steps.meta.outputs.owner_lc }}" --password-stdin
            cd /home/SmartSavings
            echo "IMAGE_TAG=${{ steps.meta.outputs.short_sha }}" > .env
            docker compose pull
            docker compose up -d --remove-orphans
            docker image prune -f
